NOTAS ANDROID STUDIO

Install android studio

Actvities:  
==========
	Class where logique goes.
	Override steps of activities for differents status
	
		public class MainActivity extends AppCompatActivity {

			EditText txtName;
			Button btnGotoDashBoard, btnGoToRegister;
			TextView lblResponse;

			@Override
			protected void onCreate(Bundle savedInstanceState) {

				super.onCreate(savedInstanceState);
				setContentView(R.layout.activity_main);

				Toolbar toolbar = findViewById(R.id.toolbar);
				setSupportActionBar(toolbar);

				Log.d("Msg: ", "Event On Create");

				txtName = findViewById(R.id.txt_Name);
				btnGotoDashBoard = findViewById(R.id.btn_GoToDashboard);
				lblResponse = findViewById(R.id.lbl_Response);
				btnGoToRegister = findViewById(R.id.btn_GoToRegister);


			   btnGotoDashBoard.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View view){
					
					

	
	
Layouts:  Vista xml y vista render .. Attributos de objetos y Paletta de objetos et Widgets
=========

All Activity associe un layout en este caso activity_main

activity_main se encuentra en src/main/res/layout/activity_main.xml


		<?xml version="1.0" encoding="utf-8"?>
		<androidx.appcompat.widget.LinearLayoutCompat xmlns:android="http://schemas.android.com/apk/res/android"
			xmlns:app="http://schemas.android.com/apk/res-auto"
			xmlns:tools="http://schemas.android.com/tools"
			android:layout_width="match_parent"
			android:layout_height="match_parent"
			android:layout_alignParentBottom="false"
			android:gravity="center_horizontal"
			android:orientation="vertical"
			tools:context=".MainActivity">

			<com.google.android.material.appbar.AppBarLayout
				android:layout_width="match_parent"
				android:layout_height="wrap_content"
				android:theme="@style/Theme.SecondApp.AppBarOverlay">

				<androidx.appcompat.widget.Toolbar
					android:id="@+id/toolbar"
					android:layout_width="match_parent"
					android:layout_height="?attr/actionBarSize"
					android:background="?attr/colorPrimary"
					app:popupTheme="@style/Theme.SecondApp.PopupOverlay"
					app:title="Magic Application" />

			</com.google.android.material.appbar.AppBarLayout>

			<TextView
				android:id="@+id/lbl_Name"
				android:layout_width="match_parent"
				android:text="What's your name"
				android:textSize="18sp" />

			<EditText
				android:id="@+id/txt_Name"
				android:layout_width="match_parent"
				android:layout_height="wrap_content"
				
				

Common Values for Layouts and Internasionalistaion //res//values
===============
strings.xml
dimensions.xml
colors.xml
themes.xml

Valores comunes usandos en los layouts como colores y textos
Referenciado en el layout con @android:hint="@string/txt_name_text"

		<resources>
			<string name="app_name">SecondApp</string>
			<string name="action_settings">Settings</string>

			<!-- Strings used for fragments for navigation -->
			<string name="next">Next</string>
			<string name="previous">Previous</string>

			<!-- Views tittles -->

			<string name="welcome_view">WELCOME VIEW</string>
			<string name="register_view">REGISTER VIEW</string>

			<!-- Layouts Objects -->

			<string name="txt_click_me">Click me</string>
			<string name="txt_Please_give_your_name">Please give your name</string>
			<string name="txt_thanks">Thanks Mr. </string>


Attributes importantes
===========
layout_margin
layout_gravity
gravity == > Posicion de elementos dentro del objetos

	
INTENTS
========
Actions between activities and passing parameters
------------------------------------------------------

                   // Intent from Main to welcome
                   Intent intent = new Intent(MainActivity.this, com.example.secondapp.WelcomeActivity.class);
                   intent.putExtra("name", nameClient);  // Passing info during accion
                   startActivity(intent);
				   

Actions between activities and passing parameters - Flagged Events for waiting results
------------------------------------------------------------------

- Button 1
0) Intent to open and send data from MAIN To REGISTER 

- Button 2 - Info pass de Main to Dashboard and Main
1) In the source Activity i send Flagged Intent Event: 

btnGotoDashBoard.setOnClickListener(new View.OnClickListener() {
            
			@Override
            public void onClick(View view){
                    // Read data
                    String nameClient = txtName.getText().toString().trim();
                    // Intent from Dashboard to Main --> use startActivityForResult to call
                    Intent intent = new Intent(MainActivity.this, DashboardActivity.class);
					intent.putExtra("name", nameClient);  // Passing info during action
                    startActivityForResult(intent, DASHBOARD_BTN_CLICK); //Its a flag for event of intent
                    

                }

			});
			
2) and in target Dashboard have to create a intent in order to resend data to MainActivity :

					// Intent to passing DATA from Dashboard to Main
                    Intent intent = new Intent();
                    intent.putExtra("data", data);  // Passing info during accion
                    setResult(RESULT_OK, intent);
                    DashboardActivity.this.finish();  //Remove activiey form memory
					
					
3) To finish i have to receive data received from Dashboard, case OK and ERROR

 @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        //When intent flagged in another activity its finished, it will be here.
        //request code: to identitfy intent_action
        //result code: to run depends of results status
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == DASHBOARD_BTN_CLICK){

            if (resultCode == RESULT_OK){
                lblResponse.setText(data.getStringExtra("data"));
            }

            if (requestCode == RESULT_CANCELED){
                lblResponse.setText("Not data received");
            }

        }


    }

HOW TO SETUP THE MAIN ACTIVITY AND MANIFEST.xml
=============================================================


<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.secondapp">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.SecondApp">
        <activity android:name=".DashboardActivity"></activity>
        <activity android:name=".RegisterActivity" />
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.SecondApp.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

WEB - DIAL - GEO
========================

		btnCallFriend.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:5142130644"));
                startActivity(intent);

            }
        });

        btnUbicate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("geo:0,0?q=7105 Rue de Lanivet, Brossard"));
                startActivity(intent);

            }
        });

        btnGoWeb.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.discovery.com"));
                startActivity(intent);

            }
        });


ATTRAPE EXTERNAL INTENTS WITH YOUR App - Dans le manifest
=========================================

            <!-- If i want to attrape calls with my application, when i get a call both applications are available to answer phone.-->
           <!-- Util to call trigger application -->
            <intent-filter>
                <action android:name="android.intent.action.DIAL" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>


VECTOR RESSOURCES
==================
	I have to add this propertie:

		android.defaultConfig.vectorDrawables.useSupportLibrary=true   in gradle.properties de gradle.app

		In res/drawables //Create new Vector ressource i have to create my ressource vector

	Integrated with imageviewer es clickable.







